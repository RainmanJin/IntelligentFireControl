<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bgy.ifc.dao.firepatrol.RecordTableDao">
  <resultMap id="BaseResultMap" type="cn.com.bgy.ifc.entity.po.firepatrol.RecordTable">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="equipment_id" jdbcType="BIGINT" property="equipmentId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="situation" jdbcType="INTEGER" property="situation" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="record_person" jdbcType="VARCHAR" property="recordPerson" />
    <result column="approver" jdbcType="VARCHAR" property="approver" />
    <result column="approval_result" jdbcType="VARCHAR" property="approvalResult" />
    <result column="logic_remove" jdbcType="BIT" property="logicRemove" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <insert id="insert" parameterType="cn.com.bgy.ifc.entity.po.firepatrol.RecordTable">
    insert into record_table (id, equipment_id, order_id, 
      situation, description, type, 
      record_person, approver, approval_result, 
      logic_remove, create_time)
    values (#{id,jdbcType=BIGINT}, #{equipmentId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, 
      #{situation,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{recordPerson,jdbcType=VARCHAR}, #{approver,jdbcType=VARCHAR}, #{approvalResult,jdbcType=VARCHAR}, 
      #{logicRemove,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective"  keyProperty="id" useGeneratedKeys="true" parameterType="cn.com.bgy.ifc.entity.po.firepatrol.RecordTable">
    insert into record_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="situation != null">
        situation,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="recordPerson != null">
        record_person,
      </if>
      <if test="approver != null">
        approver,
      </if>
      <if test="approvalResult != null">
        approval_result,
      </if>
      <if test="logicRemove != null">
        logic_remove,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="situation != null">
        #{situation,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="recordPerson != null">
        #{recordPerson,jdbcType=VARCHAR},
      </if>
      <if test="approver != null">
        #{approver,jdbcType=VARCHAR},
      </if>
      <if test="approvalResult != null">
        #{approvalResult,jdbcType=VARCHAR},
      </if>
      <if test="logicRemove != null">
        #{logicRemove,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateSelective" parameterType="cn.com.bgy.ifc.entity.po.firepatrol.RecordTable">
    UPDATE record_table
    <set>
      <if test="situation != null">
        situation = #{situation,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description= #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type= #{type,jdbcType=INTEGER},
      </if>
      <if test="recordPerson != null">
        record_person= #{recordPerson,jdbcType=VARCHAR},
      </if>
      <if test="approver != null">
        approver=  #{approver,jdbcType=VARCHAR},
      </if>
      <if test="approvalResult != null">
        approval_result=  #{approvalResult,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time= #{createTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    WHERE id=#{id,jdbcType=BIGINT}
  </update>
  <update id="deleteBatch" parameterType="java.util.List">
    UPDATE record_table set logic_remove =1 where id IN
    <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
  <!-- 查询设施巡检列表-->
  <select id="listFaultDetection" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    r.id AS id,type.sName AS sName,type.tName AS tName,type.oNAme AS oNAme,
    CONCAT(IFNULL(ri.`name`,''),IFNULL(rp.`name`,''),IFNULL(rc.`name`,''),IFNULL(rs.`name`,''),IFNULL(rb.`name`,'')) as address,
    ei.`name` AS equipmentName,r.situation AS situation,b.record_content AS recordContent,
    r.description  AS description,r.record_person AS recordPerson,
    r.approver AS approver,r.approval_result AS approvalResult,
    o.state as state, r.create_time AS createTime
    FROM record_table r
    LEFT JOIN record_by_content bc ON r.id = bc.record_id
    LEFT JOIN record_content b ON bc.content_id=b.id AND b.logic_remove=0
    LEFT JOIN equipment_info ei ON r.equipment_id = ei.id AND ei.logic_remove=0
    INNER JOIN region_computer_room rr ON ei.machine_room_id = rr.id AND rr.logic_remove = 0
    INNER JOIN region_info ri ON rr.region_id = ri.id   AND ri.logic_remove = 0
    INNER JOIN region_project rp ON rr.project_id = rp.id AND rp.region_id = ri.id  AND rp.logic_remove = 0
    LEFT JOIN region_court rc ON rr.court_id = rc.id AND rc.region_id = ri.id AND rc.project_id = rp.id AND rc.logic_remove = 0
    LEFT JOIN region_street rs ON rr.street_id = rs.id AND rs.region_id = ri.id AND rs.project_id = rp.id AND rs.court_id = rc.id  AND rs.logic_remove = 0
    LEFT JOIN region_building rb ON rr.building_id = rb.id AND rb.region_id = ri.id AND rb.project_id = rp.id
    AND rb.court_id = rc.id AND rb.street_id = rs.id  AND rb.logic_remove = 0
    left JOIN (SELECT sId,sName,sParenId, tId,tName,tParenId,e1.id AS oId,e1.name AS oNAme,e1.parent_id AS oParenId
    FROM	(
    SELECT sId,sName,sParenId,e.id AS tId,e.name AS tName,e.parent_id AS tParenId FROM (
    SELECT id AS sId,`name` AS sName,parent_id AS sParenId FROM equipment_type WHERE logic_remove=0
    ) AS s INNER JOIN equipment_type e ON s.sParenId = e.id WHERE e.logic_remove=0
    ) AS t INNER JOIN equipment_type e1 ON t.tParenId = e1.id WHERE e1.logic_remove=0) AS type ON type.sId = ei.type_id
    LEFT JOIN repair_order o ON r.order_id = o.id AND o.logic_remove=0
      <where>
        <if test="equipmentTypeId != null and equipmentTypeId!= '' ">
          AND type.sId= #{equipmentTypeId,jdbcType=BIGINT}
        </if>
        <if test="situation != null">
          AND r.situation=  #{situation}
        </if>

        <if test="keyword!='' and keyword!=null">
          AND (r.description LIKE concat('%',#{keyword},'%')
          OR r.record_person LIKE concat('%',#{keyword},'%')
          OR r.approver like concat('%',#{keyword},'%')
          OR r.approval_result LIKE concat('%',#{keyword},'%'))
        </if>
        AND r.logic_remove = 0 AND r.type = #{type}
      </where>
  </select>
  <select id="findById" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    r.id AS id,i.`name` AS equipmentName,r.situation AS situation,
    r.description  AS description,r.record_person AS recordPerson,
    r.approver AS approver,r.approval_result AS approvalResult,
    b.record_content AS recordContent,r.create_time AS createTime
    FROM record_table r
    LEFT JOIN record_by_content bc ON r.id = bc.record_id
    LEFT JOIN record_content b ON bc.content_id=b.id AND b.logic_remove=0
    LEFT JOIN equipment_info i ON r.equipment_id = i.id AND i.logic_remove=0
    WHERE r.id=#{id,jdbcType=BIGINT}
  </select>
  <select id="dropDownDataFindByEquipmentId" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
        b.id AS id,b.record_content AS recordContent
    FROM record_table r
    LEFT JOIN record_by_content bc ON r.id = bc.record_id
    LEFT JOIN record_content b ON bc.content_id=b.id
    WHERE r.type =#{type,jdbcType=INTEGER} AND b.equipment_type_id=#{equipmentId,jdbcType=BIGINT}
    GROUP BY b.id
  </select>
</mapper>