<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bgy.ifc.dao.project.RegionBuildingDao">
  <resultMap id="BaseResultMap" type="cn.com.bgy.ifc.entity.po.project.RegionBuilding">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="organization_id" jdbcType="BIGINT" property="organizationId" />
    <result column="region_id" jdbcType="BIGINT" property="regionId" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="court_id" jdbcType="BIGINT" property="courtId" />
    <result column="street_id" jdbcType="BIGINT" property="streetId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="logic_remove" jdbcType="BIT" property="logicRemove" />
  </resultMap>
  <insert id="insert" parameterType="cn.com.bgy.ifc.entity.po.project.RegionBuilding">
    insert into region_building (id, organization_id, region_id, 
      project_id, court_id, street_id, 
      name, create_time, logic_remove
      )
    values (#{id,jdbcType=BIGINT}, #{organizationId,jdbcType=BIGINT}, #{regionId,jdbcType=BIGINT}, 
      #{projectId,jdbcType=BIGINT}, #{courtId,jdbcType=BIGINT}, #{streetId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{logicRemove,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bgy.ifc.entity.po.project.RegionBuilding">
    insert into region_building
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="regionId != null">
        region_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="courtId != null">
        court_id,
      </if>
      <if test="streetId != null">
        street_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="logicRemove != null">
        logic_remove,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="regionId != null">
        #{regionId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="courtId != null">
        #{courtId,jdbcType=BIGINT},
      </if>
      <if test="streetId != null">
        #{streetId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logicRemove != null">
        #{logicRemove,jdbcType=BIT},
      </if>
    </trim>
  </insert>

  <select id="queryListRegionBuilding" parameterType="cn.com.bgy.ifc.entity.vo.task.RegionAndBrandVO" resultType="java.util.Map">
    SELECT
    b.id as id,b.organization_id as organizationId,b.name as name,
    b.region_id as regionId,i.`name` as regionName,
    b.project_id as projectId,p.`name` as projectName,
    b.court_id as courtId,c.`name` as courtName,
    b.street_id as streetId,s.`name` as streetName,
    b.create_time as createTime
    from region_building b
    LEFT JOIN region_info i on b.region_id = i.id AND i.logic_remove = 0
    LEFT JOIN region_project p on b.project_id = p.id AND p.region_id = i.id AND p.logic_remove = 0
    LEFT JOIN region_court c on b.court_id = c.id AND c.region_id = i.id AND c.project_id = p.id  AND c.logic_remove = 0
    LEFT JOIN region_street s on b.street_id = s.id AND s.region_id =i.id AND s.project_id = p.id AND s.court_id = c.id  AND s.logic_remove = 0
    <where>
      <if test="regionId != null and regionId!= '' ">
        AND b.region_id= #{regionId,jdbcType=BIGINT}
      </if>
      <if test="projectId != null and projectId != '' ">
        AND b.project_id= #{ projectId,jdbcType=BIGINT}
      </if>
      <if test="courtId != null and courtId != '' ">
        AND b.court_id= #{ courtId,jdbcType=BIGINT}
      </if>
      <if test="streetId != null and streetId != '' ">
        AND b.street_id= #{ streetId,jdbcType=BIGINT}
      </if>
      <if test="keyword!='' and keyword!=null">
        AND (i.name LIKE concat('%',#{keyword},'%')
        OR p.name LIKE concat('%',#{keyword},'%')
        OR c.name like concat('%',#{keyword},'%')
        OR s.name LIKE concat('%',#{keyword},'%')
        OR b.name like concat('%',#{keyword},'%'))
      </if>
      AND b.logic_remove = 0
    </where>
  </select>
  <update id="updateRegionBuilding" parameterType="cn.com.bgy.ifc.entity.po.project.RegionBuilding">
    UPDATE region_building
    <set>
      <if test="regionId != null and projectId != null and courtId != null and streetId != null">
        region_id =#{regionId},project_id =#{projectId},court_id= #{ courtId},street_id= #{ streetId},
      </if>
      <if test="name != null">name =#{name},</if>
      <if test="createTime != null">create_Time =#{createTime}</if>
    </set>
    WHERE id = #{id}

  </update>
  <update id="deleteRegionBuilding" parameterType="java.util.List">
    UPDATE region_building set logic_remove =1 where id IN
    <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
  <select id="queryRegionBuildingtNameById" parameterType="java.lang.Long" resultType="java.lang.String">
      SELECT name FROM region_building  WHERE logic_remove = 0 AND id= #{id}
  </select>
  <select id="queryRegionBuildingtNameBySuperId" parameterType="java.lang.Long" resultType="java.util.Map">
    SELECT name,id FROM region_building  WHERE logic_remove = 0 AND street_id= #{ streetId}
  </select>

  <update id="deleteRegionBuildingBySuperId" parameterType="java.util.List">
    UPDATE region_building set logic_remove =1 where street_id IN
    <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
  <select id="findById" parameterType="java.lang.Long" resultType="java.util.Map">
     SELECT
    b.id as id,b.organization_id as organizationId,b.name as name,
    b.region_id as regionId,i.`name` as regionName,
    b.project_id as projectId,p.`name` as projectName,
    b.court_id as courtId,c.`name` as courtName,
    b.street_id as streetId,s.`name` as streetName
    from region_building b
    LEFT JOIN region_info i on b.region_id = i.id AND i.logic_remove = 0
    LEFT JOIN region_project p on b.project_id = p.id AND p.region_id = i.id AND p.logic_remove = 0
    LEFT JOIN region_court c on b.court_id = c.id AND c.region_id = i.id AND c.project_id = p.id  AND c.logic_remove = 0
    LEFT JOIN region_street s on b.street_id = s.id AND s.region_id =i.id AND s.project_id = p.id AND s.court_id = c.id  AND s.logic_remove = 0
    WHERE
      b.id= #{id,jdbcType=BIGINT}
      AND b.logic_remove = 0
  </select>
  <update id="updateFindByAddressId" parameterType="java.util.Map">
      UPDATE region_building
    <set>
      <if test="regionId != null">region_id =#{regionId},</if>
      <if test="projectId != null">project_id =#{projectId},</if>
      <if test="courtId != null">court_id= #{courtId},</if>
      <if test="streetId != null">street_id= #{streetId},</if>
    </set>
    <where>
      <if test="regionId != null">AND region_id =#{regionId}</if>
      <if test="projectId != null">AND project_id =#{projectId}</if>
      <if test="courtId != null">AND court_id= #{courtId}</if>
      <if test="streetId != null">AND street_id= #{streetId}</if>
    </where>
  </update>
</mapper>