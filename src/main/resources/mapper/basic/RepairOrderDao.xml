<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bgy.ifc.dao.repair.RepairOrderDao">
  <resultMap id="BaseResultMap" type="cn.com.bgy.ifc.entity.po.repair.RepairOrder">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="organization_id" jdbcType="BIGINT" property="organizationId" />
    <result column="computer_room_id" jdbcType="BIGINT" property="computerRoomId" />
    <result column="equipment_id" jdbcType="BIGINT" property="equipmentId" />
    <result column="mcid" jdbcType="INTEGER" property="mcid" />
    <result column="repair_person" jdbcType="VARCHAR" property="repairPerson" />
    <result column="repair_person_call" jdbcType="VARCHAR" property="repairPersonCall" />
    <result column="repair_person_time" jdbcType="TIMESTAMP" property="repairPersonTime" />
    <result column="is_urgent" jdbcType="BIT" property="isUrgent" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="process_person" jdbcType="VARCHAR" property="processPerson" />
    <result column="process_time" jdbcType="TIMESTAMP" property="processTime" />
    <result column="maintaindetail" jdbcType="LONGVARCHAR" property="maintaindetail" />
    <result column="repair_reason" jdbcType="LONGVARCHAR" property="repairReason" />
    <result column="process_remark" jdbcType="LONGVARCHAR" property="processRemark" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="extend_id" jdbcType="INTEGER" property="extendId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_push" jdbcType="BIT" property="isPush" />
    <result column="logic_remove" jdbcType="BIT" property="logicRemove" />
  </resultMap>

  <insert id="insert" parameterType="cn.com.bgy.ifc.entity.po.repair.RepairOrder">
    insert into repair_order (id, organization_id, computer_room_id, 
      equipment_id, mcid, repair_person, 
      repair_person_call, repair_person_time, is_urgent, 
      state, process_person, process_time,
      maintaindetail, repair_reason,
      process_remark, order_no, extend_id,
      create_time, is_push
      logic_remove )
    values (#{id,jdbcType=BIGINT}, #{organizationId,jdbcType=BIGINT}, #{computerRoomId,jdbcType=BIGINT}, 
      #{equipmentId,jdbcType=BIGINT}, #{mcid,jdbcType=INTEGER}, #{repairPerson,jdbcType=VARCHAR}, 
      #{repairPersonCall,jdbcType=VARCHAR}, #{repairPersonTime,jdbcType=TIMESTAMP}, #{isUrgent,jdbcType=BIT}, 
      #{state,jdbcType=INTEGER}, #{processPerson,jdbcType=VARCHAR}, #{processTime,jdbcType=TIMESTAMP},
      #{maintaindetail,jdbcType=LONGVARCHAR}, #{repairReason,jdbcType=LONGVARCHAR},
      #{processRemark,jdbcType=LONGVARCHAR},#{orderNo,jdbcType=VARCHAR},
      #{extendId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{isPush,jdbcType=BIT},#{logicRemove,jdbcType=BIT} )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bgy.ifc.entity.po.repair.RepairOrder">
    insert into repair_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="computerRoomId != null">
        computer_room_id,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="mcid != null">
        mcid,
      </if>
      <if test="repairPerson != null">
        repair_person,
      </if>
      <if test="repairPersonCall != null">
        repair_person_call,
      </if>
      <if test="repairPersonTime != null">
        repair_person_time,
      </if>
      <if test="isUrgent != null">
        is_urgent,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="processPerson != null">
        process_person,
      </if>
      <if test="processTime != null">
        process_time,
      </if>
      <if test="maintaindetail != null">
        maintaindetail,
      </if>
      <if test="repairReason != null">
        repair_reason,
      </if>
      <if test="processRemark != null">
        process_remark,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="extendId != null">
        extend_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isPush != null">
        is_push,
      </if>
      <if test="logicRemove != null">
        logic_remove,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="computerRoomId != null">
        #{computerRoomId,jdbcType=BIGINT},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=BIGINT},
      </if>
      <if test="mcid != null">
        #{mcid,jdbcType=INTEGER},
      </if>
      <if test="repairPerson != null">
        #{repairPerson,jdbcType=VARCHAR},
      </if>
      <if test="repairPersonCall != null">
        #{repairPersonCall,jdbcType=VARCHAR},
      </if>
      <if test="repairPersonTime != null">
        #{repairPersonTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isUrgent != null">
        #{isUrgent,jdbcType=BIT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="processPerson != null">
        #{processPerson,jdbcType=VARCHAR},
      </if>
      <if test="processTime != null">
        #{processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="maintaindetail != null">
        #{maintaindetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="repairReason != null">
        #{repairReason,jdbcType=LONGVARCHAR},
      </if>
      <if test="processRemark != null">
        #{processRemark,jdbcType=LONGVARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="extendId != null">
        #{extendId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPush != null">
        #{isPush,jdbcType=BIT},
      </if>
      <if test="logicRemove != null">
        #{logicRemove,jdbcType=BIT},
      </if>


    </trim>
  </insert>

  <select id="queryListRepairOrder" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT o.id as id,
    v.`name` as equipmentName,
    CONCAT(ri.name,rp.name,rc.name,rs.name,rb.name) AS address,
    o.maintaindetail as maintaindetail,
    o.repair_person as repairPerson,
    o.repair_reason as repairReason,
    o.repair_time as repairTime,
    o.is_urgent as isUrgent,
    o.state as state,
    o.process_time as processTime,
    o.process_person as processPerson,
    o.process_remark as processRemark,
    o.order_no as orderNo,
    o.extend_id as extendId,
    o.create_time  as createTime,
    o.is_push  as isPush
    FROM repair_order o
    LEFT JOIN equipment_info v ON o.equipment_id = v.id
    LEFT JOIN region_computer_room rr ON o.computer_room_id = rr.id
    LEFT JOIN region_info ri ON rr.region_id = ri.id
    LEFT JOIN region_project rp ON rr.project_id = rp.id
    LEFT JOIN region_court rc ON rr.court_id = rc.id
    LEFT JOIN region_street rs ON rr.street_id = rs.id
    LEFT JOIN region_building rb ON rr.building_id = rb.id
    LEFT JOIN equipment_type et ON v.type_id= et.id
    LEFT JOIN equipment_brand eb ON v.brand_id = eb.id
    LEFT JOIN equipment_version ev ON v.version_id = ev.id
        <where>
          <if test="params.regionId != null and params.regionId !='' ">
            AND v.regionId = #{params.regionId,jdbcType=BIGINT}
          </if>
          <if test="params.projectId != null and params.projectId !='' ">
            AND v.projectId = #{params.projectId,jdbcType=BIGINT}
          </if>
          <if test="params.typeId != null and params.typeId !='' ">
            AND v.typeId = #{params.typeId,jdbcType=BIGINT}
          </if>
          <if test="params.versionId != null and params.versionId !='' ">
            AND v.versionId = #{params.versionId,jdbcType=BIGINT},
          </if>
          <if test="params.brandId != null and params.brandId !='' ">
            AND v.brandId = #{params.brandId,jdbcType=BIGINT}
          </if>
          <if test="params.state !=null and params.state !=''"  >
            AND o.state = #{params.state,jdbcType=INTEGER}
          </if>
          <if test="params.isUrgent !=null and params.isUrgent !=''">
            AND o.is_urgent = #{params.isUrgent,jdbcType=INTEGER}
          </if>
          <if test="params.orderNo != null and params.orderNo !='' ">
            AND o.order_no = #{params.orderNo,jdbcType=BIGINT}
          </if>
          <if test="params.repairPerson != null and params.repairPerson !='' ">
            AND o.repair_person = #{params.repairPerson,jdbcType=BIGINT}
          </if>
          <if test="params.keyWords != null and params.keyWords !='' ">
            AND ( o.maintaindetail like concat('%',#{params.keyWords},'%')
            OR  o.repair_person like concat('%',#{params.keyWords},'%')
            or o.order_no like concat('%',#{params.keyWords},'%')
            )
          </if>
          <if test="params.repairTimeStart !=null and params.repairTimeStart !=''">
            and o.repair_time >= #{params.repairTimeStart}
          </if>
          <if test="params.repairTimeEnd !=null and params.repairTimeEnd !=''">
            <![CDATA[
            and o.repair_time <= #{params.repairTimeEnd}
            ]]>
          </if>
          AND o.logic_remove = 0
        </where>

  </select>
  <select id="queryRepairOrderById" parameterType="java.lang.Long" resultType="java.util.Map">
    SELECT o.id as id,
    v.`name` as equipmentName,
    ri.name as regionName,
    rp.name as projectName,
    rc.name as courtName,
    rs.name as streetName,
    rb.name as buildingName,
    o.maintaindetail as maintaindetail,
    o.repair_person as repairPerson,
    o.repair_reason as repairReason,
    o.repair_time as repairTime,
    o.is_urgent as isUrgent,
    o.state as state,
    o.process_time as processTime,
    o.process_person as processPerson,
    o.process_remark as processRemark,
    o.order_no as orderNo,
    o.extend_id as extendId,
    o.create_time  as createTime,
    o.is_push  as isPush
    FROM repair_order o
    LEFT JOIN equipment_info v ON o.equipment_id = v.id
    LEFT JOIN region_computer_room rr ON o.computer_room_id = rr.id
    LEFT JOIN region_info ri ON rr.region_id = ri.id
    LEFT JOIN region_project rp ON rr.project_id = rp.id
    LEFT JOIN region_court rc ON rr.court_id = rc.id
    LEFT JOIN region_street rs ON rr.street_id = rs.id
    LEFT JOIN region_building rb ON rr.building_id = rb.id
    LEFT JOIN equipment_type et ON v.type_id= et.id
    LEFT JOIN equipment_brand eb ON v.brand_id = eb.id
    LEFT JOIN equipment_version ev ON v.version_id = ev.id
    where
    o.id=#{id}
  </select>
  <select id="queryRepairOrderByExtendId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   SELECT id, organization_id, computer_room_id,
      equipment_id, mcid, repair_person,
      repair_person_call, repair_person_time, is_urgent,
      state, process_person, process_time,
      maintaindetail, repair_reason,
      process_remark, order_no, extend_id,
      create_time, is_push
      logic_remove
    FROM repair_order o
    where
    o.extend_id=#{extendId} and logic_remove=0
  </select>
  <update id="deleteRepairOrder" parameterType="java.util.List">
    UPDATE  repair_order set logic_remove =1  where id IN
    <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
  <select id="queryRepairOrderIsDelete" parameterType="java.util.List" resultType="java.lang.Long">
        SELECT id FROM repair_order WHERE id IN
          <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
                #{id}
          </foreach>
          AND logic_remove = 0
          AND is_push = 0
          AND state in(0,3,4)
  </select>

  <select id="queryRepairOrderIsUpdate" parameterType="java.lang.Long">
        SELECT id FROM repair_order WHERE
        id =#{id}
        AND logic_remove = 0
        AND is_push = 0
        AND state =0
  </select>
  <update id="updateRepairOrder" parameterType="cn.com.bgy.ifc.entity.po.repair.RepairOrder">
    UPDATE equipment_info
    <set>
      <if test="mcid != null">
        mcid =#{mcid,jdbcType=INTEGER},
      </if>
      <if test="maintaindetail != null">
        maintaindetail=#{maintaindetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="repairPerson != null">
        repair_person=#{repairPerson,jdbcType=VARCHAR},
      </if>
      <if test="repair_person_time != null">
        repair_person_time=#{repairPersonTime,jdbcType=TIMESTAMP},
      </if>
      <if test="is_urgent != null">
        is_urgent=#{isUrgent,jdbcType=BIT},
      </if>
      <if test="state != null">
        state=#{state,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state=#{state,jdbcType=BIGINT},
      </if>
      <if test="create_time != null">
        create_time=#{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    WHERE id
    = #{id}
  </update>
</mapper>