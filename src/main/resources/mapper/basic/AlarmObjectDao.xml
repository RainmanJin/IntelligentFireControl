<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bgy.ifc.dao.alarm.AlarmObjectDao">
    <resultMap id="BaseResultMap" type="cn.com.bgy.ifc.entity.po.alarm.AlarmObject">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="project_id" jdbcType="BIGINT" property="projectId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="alarm_mode_id" jdbcType="BIGINT" property="alarmModeId"/>
        <result column="contact_way" jdbcType="VARCHAR" property="contactWay"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="notice_level" jdbcType="INTEGER" property="noticeLevel"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="logic_remove" jdbcType="BIT" property="logicRemove"/>
    </resultMap>
    <insert id="insert" parameterType="cn.com.bgy.ifc.entity.po.alarm.AlarmObject">
    insert into alarm_object (id, project_id, user_id, 
      alarm_mode_id, contact_way, state, 
      notice_level, create_time, logic_remove
      )
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{alarmModeId,jdbcType=BIGINT}, #{contactWay,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
      #{noticeLevel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{logicRemove,jdbcType=BIT}
      )
  </insert>
    <insert id="insertSelective" parameterType="cn.com.bgy.ifc.entity.po.alarm.AlarmObject">
        insert into alarm_object
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="alarmModeId != null">
                alarm_mode_id,
            </if>
            <if test="contactWay != null">
                contact_way,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="noticeLevel != null">
                notice_level,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="logicRemove != null">
                logic_remove,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="alarmModeId != null">
                #{alarmModeId,jdbcType=BIGINT},
            </if>
            <if test="contactWay != null">
                #{contactWay,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="noticeLevel != null">
                #{noticeLevel,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logicRemove != null">
                #{logicRemove,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <select id="queryListByParam" parameterType="cn.com.bgy.ifc.entity.po.alarm.AlarmObject" resultMap="BaseResultMap">
        SELECT
        id, project_id, user_id,
        alarm_mode_id, contact_way, state,
        notice_level, create_time, logic_remove
        FROM alarm_object
        <where>
            <if test="state != null and state != ''or state == 0">
                AND state = #{state}
            </if>
            AND logic_remove = 0
        </where>
    </select>

    <select id="findById" parameterType="Long" resultMap="BaseResultMap">
        SELECT
        id, project_id, user_id,
        alarm_mode_id, contact_way, state,
        notice_level, create_time, logic_remove
        FROM alarm_object  WHERE id = #{id}
    </select>

    <update id="update" parameterType="cn.com.bgy.ifc.entity.po.alarm.AlarmObject">
        UPDATE alarm_object
        <set>
                project_id= #{projectId,jdbcType=BIGINT},
                user_id=#{userId,jdbcType=BIGINT},
                alarm_mode_id=#{alarmModeId,jdbcType=BIGINT},
                contact_way=#{contactWay,jdbcType=VARCHAR},
                state=#{state,jdbcType=INTEGER},
                notice_level=#{noticeLevel,jdbcType=INTEGER},
                create_time=#{createTime,jdbcType=TIMESTAMP},
                logic_remove=#{logicRemove,jdbcType=BIT},
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateSelective" parameterType="cn.com.bgy.ifc.entity.po.alarm.AlarmObject">
        UPDATE alarm_object
        <set>
            <if test="projectId != null">
                project_id= #{projectId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id=#{userId,jdbcType=BIGINT},
            </if>
            <if test="alarmModeId != null">
                alarm_mode_id=#{alarmModeId,jdbcType=BIGINT},
            </if>
            <if test="contactWay != null">
                contact_way=#{contactWay,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state=#{state,jdbcType=INTEGER},
            </if>
            <if test="noticeLevel != null">
                notice_level=#{noticeLevel,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time=#{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logicRemove != null">
                logic_remove=#{logicRemove,jdbcType=BIT},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="deleteBatch" parameterType="java.util.List">
        UPDATE alarm_object SET logic_remove =1 WHERE id IN
        <foreach close=")" collection="list" item="id" open="(" separator=",">
            #{id}
        </foreach>
    </update>

</mapper>