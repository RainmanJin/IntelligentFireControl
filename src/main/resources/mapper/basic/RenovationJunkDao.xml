<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bgy.ifc.dao.firepatrol.RenovationJunkDao">
  <resultMap id="BaseResultMap" type="cn.com.bgy.ifc.entity.po.firepatrol.RenovationJunk">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="record_id" jdbcType="BIGINT" property="recordId" />
    <result column="check_person" jdbcType="VARCHAR" property="checkPerson" />
    <result column="check_person_tel" jdbcType="VARCHAR" property="checkPersonTel" />
    <result column="check_result" jdbcType="VARCHAR" property="checkResult" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="logic_remove" jdbcType="BIT" property="logicRemove" />
      <result column="clear_description" jdbcType="LONGVARCHAR" property="clearDescription" />
  </resultMap>
  <sql id="Blob_Column_List">
    clear_description
  </sql>
  <insert id="insert" parameterType="cn.com.bgy.ifc.entity.po.firepatrol.RenovationJunk">
    insert into fire_renovation_junk (id, record_id, check_person,
      check_person_tel, check_result, create_time, 
      logic_remove, clear_description)
    values (#{id,jdbcType=BIGINT}, #{recordId,jdbcType=BIGINT}, #{checkPerson,jdbcType=VARCHAR},
      #{checkPersonTel,jdbcType=VARCHAR}, #{checkResult,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{logicRemove,jdbcType=BIT}, #{clearDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bgy.ifc.entity.po.firepatrol.RenovationJunk">
    insert into fire_renovation_junk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recordId != null">
          record_id,
      </if>
      <if test="checkPerson != null">
        check_person,
      </if>
      <if test="checkPersonTel != null">
        check_person_tel,
      </if>
      <if test="checkResult != null">
        check_result,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="logicRemove != null">
        logic_remove,
      </if>
      <if test="clearDescription != null">
        clear_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=BIGINT},
      </if>
      <if test="checkPerson != null">
        #{checkPerson,jdbcType=VARCHAR},
      </if>
      <if test="checkPersonTel != null">
        #{checkPersonTel,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null">
        #{checkResult,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logicRemove != null">
        #{logicRemove,jdbcType=BIT},
      </if>
      <if test="clearDescription != null">
        #{clearDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
    <update id="deleteBatch" parameterType="java.util.List">
        UPDATE   fire_renovation_junk set logic_remove =1  where id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateSelective" parameterType="cn.com.bgy.ifc.entity.po.firepatrol.RenovationJunk">
        UPDATE   fire_renovation_junk
        <set>
            <if test="checkPerson != null">
                check_person=  #{checkPerson,jdbcType=VARCHAR},
            </if>
            <if test="checkPersonTel != null">
                check_person_tel  #{checkPersonTel,jdbcType=VARCHAR},
            </if>
            <if test="checkResult != null">
                check_result= #{checkResult,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time =  #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="clearDescription != null">
                clear_description = #{clearDescription,jdbcType=LONGVARCHAR}
            </if>
        </set>
        WHERE logic_remove = 0 AND id=#{id,jdbcType=BIGINT}
    </update>
    <select id="listRenovationJunk" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            id,record_id AS recordId,check_person AS checkPerson,check_person_tel AS checkPersonTel,
            check_result AS checkResult,clear_description AS clearDescription,create_time AS createTime
        FROM fire_renovation_junk
        <where>
            <if test="recordId != null and recordId!= '' ">
                AND record_id = #{recordId,jdbcType=BIGINT}
            </if>
            <if test="keyword!='' and keyword!=null">
                AND (check_person LIKE concat('%',#{keyword},'%')
                OR check_result LIKE concat('%',#{keyword},'%'))
                )
            </if>
            AND logic_remove=0
        </where>
    </select>
    <select id="findById" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT
            id,record_id AS recordId,check_person AS checkPerson,check_person_tel AS checkPersonTel,
            check_result AS checkResult,clear_description AS clearDescription,create_time AS createTime
        FROM fire_renovation_junk
        WHERE logic_remove = 0 AND id=#{id,jdbcType=BIGINT}
    </select>
    <update id="deleteByRecordId" parameterType="java.util.List">
        UPDATE   fire_renovation_junk set logic_remove =1  where record_id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id,jdbcType=BIGINT}
        </foreach>
    </update>
    <select id="queryByRecordId" parameterType="java.lang.Long" resultType="cn.com.bgy.ifc.entity.po.firepatrol.RenovationJunk">
         SELECT
            id,record_id AS recordId,check_person AS checkPerson,check_person_tel AS checkPersonTel,
            check_result AS checkResult,clear_description AS clearDescription,create_time AS createTime
        FROM fire_renovation_junk
        WHERE logic_remove = 0 AND record_id=#{id,jdbcType=BIGINT}
    </select>
</mapper>