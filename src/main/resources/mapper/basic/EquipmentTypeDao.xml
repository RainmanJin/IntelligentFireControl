<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bgy.ifc.dao.equipment.EquipmentTypeDao">
    <resultMap id="BaseResultMap" type="cn.com.bgy.ifc.entity.po.equipment.EquipmentType">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="parent_name" jdbcType="VARCHAR" property="parentName"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="thing_code" jdbcType="INTEGER" property="thingCode"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="logic_remove" jdbcType="BIT" property="logicRemove"/>
        <association property="equipmentThingType" column="thing_code" javaType="cn.com.bgy.ifc.entity.po.equipment.EquipmentThingType">
            <id  column="thing_id" property="id"/>
            <result  column="thing_value" property="value"/>
            <result  column="thing_name" property="name"/>
        </association>
    </resultMap>
    <insert id="insert" parameterType="cn.com.bgy.ifc.entity.po.equipment.EquipmentType">
    insert into equipment_type (id, name, parent_id, 
      status,logic_remove，thing_code)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER},#{logicRemove,jdbcType=BIT}，#{thingCode,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.com.bgy.ifc.entity.po.equipment.EquipmentType">
        insert into equipment_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="logicRemove != null">
                logic_remove,
            </if>
            <if test="thingCode != null">
                thing_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="logicRemove != null">
                #{logicRemove,jdbcType=BIT},
            </if>
            <if test="thingCode != null">
                #{thingCode,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateSelective" parameterType="cn.com.bgy.ifc.entity.po.equipment.EquipmentType">
        UPDATE equipment_type
        <set>
            <if test="name != null">
                name= #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id= #{parentId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status=#{status,jdbcType=INTEGER},
            </if>
            <if test="thingCode != null">
                thing_code=#{thingCode,jdbcType=INTEGER},
            </if>
            <if test="thingCode == null">
                thing_code=NULL,
            </if>
        </set>
        WHERE id
        = #{id}
    </update>

    <select id="queryListEquipmentType" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        t.id as id,t.`name` as name,t.parent_id as parentId ,e.`name` as parentName,t.`status` as `status`
        FROM (SELECT id,`name`,parent_id,`status`,logic_remove FROM equipment_type) as t
        LEFT JOIN equipment_type e ON t.parent_id = e.id

        <where>
            <if test="keyword != null and keyword !='' ">
                AND (t.`name` LIKE concat('%',#{keyword},'%') OR e.`name` LIKE concat('%',#{keyword},'%'))
            </if>
            AND t.logic_remove = 0
        </where>

    </select>
    <update id="deleteEquipmentType" parameterType="java.util.List">
        UPDATE equipment_type set logic_remove =1 where id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="queryBySuperIdRtrueSuperId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT parent_id FROM equipment_type WHERE id =#{id,jdbcType=BIGINT} AND `status`=1 AND logic_remove = 0
    </select>
    <select id="queryEquipmentTypeBySuperId" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT id,name,parent_id as parentId
        FROM equipment_type
        WHERE parent_id =#{id,jdbcType=BIGINT} AND `status`=1 AND logic_remove = 0
    </select>

    <select id="queryListByParam" parameterType="cn.com.bgy.ifc.entity.vo.equipment.EquipmentTypeVo"
            resultType="cn.com.bgy.ifc.entity.vo.equipment.EquipmentTypeVo">
        SELECT
        ot.oId AS oId,
        ot.oName AS oName,
        e.parent_id as parentId,
        e.id AS id,
        e.name AS `name`,
        e.status AS `status`,
        e.logic_remove AS logicRemove,
        e.thing_code AS thingCode,
        t.name AS thingName
        FROM (SELECT o.id AS oId,o.name AS oName
        FROM equipment_type o
        WHERE  o.logic_remove = 0 AND o.parent_id=1 ) AS ot
        RIGHT JOIN equipment_type e ON e.id = ot.oId
        LEFT JOIN equipment_thing_type t ON t.value=e.thing_code
        <where>
            <if test="keyword != null and keyword != ''">
                AND  (e.name LIKE  concat('%',#{keyword},'%') OR t.name LIKE  concat('%',#{keyword},'%'))
            </if>
            AND e.logic_remove = 0
            AND e.parent_id !=0
        </where>
    </select>

    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
         SELECT
         id,
         name,
         parent_id,
         status,
         logic_remove,
         thing_code
         FROM equipment_type
         WHERE
         id= #{id,jdbcType=BIGINT}
         AND logic_remove =0
    </select>

    <select id="queryAllEquipmentType" resultType="java.util.Map">
        SELECT id,name FROM equipment_type WHERE logic_remove=0  AND status=1 AND parent_id = 1
    </select>

    <select id="queryAllList" parameterType="cn.com.bgy.ifc.entity.po.equipment.EquipmentType"
            resultMap="BaseResultMap">
        SELECT
        id, name, parent_id,
        status,logic_remove,thing_code
        FROM equipment_type
        <where>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="parentId != null and parentId != 0">
                  AND parent_id = #{parentId}
            </if>
            <if test="parentId != null and parentId == 0 ">
                AND parent_id NOT IN(0,1)
            </if>
                AND logic_remove = 0

        </where>
    </select>

    <update id="deleteBatch" parameterType="java.util.List">
        UPDATE equipment_type SET logic_remove =1 WHERE id IN
        <foreach collection="list" item="id" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </update>
</mapper>