<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bgy.ifc.dao.equipment.EquipmentVersionDao">
    <resultMap id="BaseResultMap" type="cn.com.bgy.ifc.entity.po.equipment.EquipmentVersion">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="brand_id" jdbcType="BIGINT" property="brandId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="logic_remove" jdbcType="BIT" property="logicRemove"/>
    </resultMap>
    <insert id="insert" parameterType="cn.com.bgy.ifc.entity.po.equipment.EquipmentVersion">
    insert into equipment_version (id, brand_id, name, 
      status, description, logic_remove
      )
    values (#{id,jdbcType=BIGINT}, #{brandId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{logicRemove,jdbcType=BIT}
      )
  </insert>
    <insert id="insertSelective" parameterType="cn.com.bgy.ifc.entity.po.equipment.EquipmentVersion">
        insert into equipment_version
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="brandId != null">
                brand_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="logicRemove != null">
                logic_remove,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="brandId != null">
                #{brandId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="logicRemove != null">
                #{logicRemove,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateSelective" parameterType="cn.com.bgy.ifc.entity.po.equipment.EquipmentVersion">
        UPDATE equipment_version
        <set>
            <if test="brandId != null">
                brand_id= #{brandId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name= #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status=#{status,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                description= #{description,jdbcType=VARCHAR},
            </if>
            <if test="logicRemove != null">
                logic_remove= #{logicRemove,jdbcType=BIT},
            </if>
        </set>
        WHERE id
        = #{id}
    </update>
    <select id="queryListEquipmentVersion" resultType="java.util.Map" parameterType="java.util.Map">

        SELECT
        v.id as id,v.brand_id as brandId,b.`name` as brandName,v.name as name,
        v.`status` as `status`,v.description as description
        FROM equipment_version v
        LEFT JOIN equipment_brand b ON v.brand_id = b.id

        <where>
            <if test="brandId != null and brandId !='' ">
                  AND v.brand_id = #{brandId,jdbcType=BIGINT}
            </if>
            <if test="keyword != null and keyword !='' ">
                AND (b.`name` LIKE concat('%',#{keyword},'%') OR v.name LIKE concat('%',#{keyword},'%'))
            </if>
            AND v.logic_remove = 0
        </where>

    </select>
    <update id="deleteEquipmentType" parameterType="java.util.List">
        UPDATE  equipment_version set logic_remove =1  where id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="queryEquipmentVersionByBrandId" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT id,name,brand_id FROM equipment_version WHERE logic_remove = 0 AND brand_id=#{id,jdbcType=BIGINT}
    </select>

    <select id="queryEquipmentVersionIdByBrandId" parameterType="java.util.List" resultType="java.util.List">
        SELECT id FROM equipment_version WHERE logic_remove = 0 and brand_id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="findById" parameterType="java.lang.Long" resultType="java.util.Map">

        SELECT
        v.id as id,v.brand_id as brandId,b.`name` as brandName,v.name as name,
        v.`status` as `status`,v.description as description
        FROM equipment_version v
        LEFT JOIN equipment_brand b ON v.brand_id = b.id
         WHERE
         v.id= #{id,jdbcType=BIGINT}
          AND v.logic_remove = 0
    </select>
</mapper>